{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Set directory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Binary1",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name,pipeline().parameters.product)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@endswith(item().name,'json')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data1_copy2",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Set Directory_final",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Source",
												"value": "source//"
											},
											{
												"name": "Destination",
												"value": "target/@{variables('dir_final')}/"
											}
										],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"wildcardFileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"deleteFilesAfterCompletion": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "Binary1",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "Output_Binary2",
												"type": "DatasetReference",
												"parameters": {
													"target_dir": {
														"value": "@variables('dir_final')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Set Directory_final",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "dir_final",
											"value": {
												"value": "@concat(pipeline().parameters.product,'/',variables('target_directory'),'/','csv')",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1_copy1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Set finalDir1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Source",
												"value": "source//"
											},
											{
												"name": "Destination",
												"value": "target/@{variables('dir_final')}/"
											}
										],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"wildcardFileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"deleteFilesAfterCompletion": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "Binary1",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "Output_Binary2",
												"type": "DatasetReference",
												"parameters": {
													"target_dir": {
														"value": "@variables('dir_final')",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Set finalDir1",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Dir",
												"value": "This should generate dir based on current date"
											}
										],
										"typeProperties": {
											"variableName": "dir_final",
											"value": {
												"value": "@concat(pipeline().parameters.product,'/',variables('target_directory'),'/','json')",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Set directory",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "target_directory",
					"value": {
						"value": "@concat(formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set pipeline2Id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineId",
					"value": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Append variable1",
				"type": "AppendVariable",
				"dependsOn": [
					{
						"activity": "Set pipeline2Id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "list_run_ids",
					"value": {
						"value": "@pipeline()?.TriggeredByPipelineRunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Append variable2",
				"type": "AppendVariable",
				"dependsOn": [
					{
						"activity": "Append variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "list_run_ids",
					"value": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Append variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "finalappendedvariable",
					"value": {
						"value": "@variables('list_run_ids')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"product": {
				"type": "String"
			}
		},
		"variables": {
			"filename": {
				"type": "String"
			},
			"target_directory": {
				"type": "String"
			},
			"sys_date": {
				"type": "String"
			},
			"Year": {
				"type": "String"
			},
			"dir_final": {
				"type": "String"
			},
			"PipelineId": {
				"type": "String"
			},
			"list_run_ids": {
				"type": "Array"
			},
			"finalappendedvariable": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-05-22T01:22:19Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}