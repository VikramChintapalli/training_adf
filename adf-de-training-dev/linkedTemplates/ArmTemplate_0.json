{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-de-training-dev"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://detraining25.dfs.core.windows.net/"
		},
		"AzureKeyVault_lks_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://de-Credentials.vault.azure.net/"
		},
		"AzSql_GenericLinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "trainingsewrver.database.windows.net"
		},
		"AzSql_GenericLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().Database}"
		},
		"AzSql_GenericLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "testadmin"
		},
		"trigger_storage_properties_pl_trigger_job_parameters_filename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"trigger_storage_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/594e63df-4c98-4826-8eb8-99b16f59c073/resourceGroups/RG-DE-Training-25/providers/Microsoft.Storage/storageAccounts/detraining25"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_lks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_lks_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_First_Scheduled')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"Daily Trigger"
				],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-05-22T01:34:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								25
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_tumbling')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2025-05-23T02:01:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"target_dir": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().target_dir",
							"type": "Expression"
						},
						"fileSystem": "target"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzSql_GenericLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Database": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzSql_GenericLinkedService_properties_typeProperties_server')]",
					"database": "[parameters('AzSql_GenericLinkedService_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzSql_GenericLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_lks",
							"type": "LinkedServiceReference"
						},
						"secretName": "adminpasscode",
						"secretVersion": "dc2561a86cdf4d89b931a24d1a903874"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_lks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_tumbling2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2025-05-23T02:45:00Z",
					"endTime": "2025-05-23T03:45:00Z",
					"delay": "00:00:30",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 0,
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"size": "0.00:05:00",
							"offset": "-0.00:04:00",
							"referenceTrigger": {
								"referenceName": "trigger_tumbling",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/trigger_tumbling')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set directory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.product)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@endswith(item().name,'json')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data1_copy2",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Set Directory_final",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "source//"
													},
													{
														"name": "Destination",
														"value": "target/@{variables('dir_final')}/"
													}
												],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"deleteFilesAfterCompletion": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "Binary1",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "Output_Binary2",
														"type": "DatasetReference",
														"parameters": {
															"target_dir": {
																"value": "@variables('dir_final')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Set Directory_final",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "dir_final",
													"value": {
														"value": "@concat(pipeline().parameters.product,'/',variables('target_directory'),'/','csv')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data1_copy1",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Set finalDir1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "source//"
													},
													{
														"name": "Destination",
														"value": "target/@{variables('dir_final')}/"
													}
												],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"deleteFilesAfterCompletion": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "Binary1",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "Output_Binary2",
														"type": "DatasetReference",
														"parameters": {
															"target_dir": {
																"value": "@variables('dir_final')",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Set finalDir1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Dir",
														"value": "This should generate dir based on current date"
													}
												],
												"typeProperties": {
													"variableName": "dir_final",
													"value": {
														"value": "@concat(pipeline().parameters.product,'/',variables('target_directory'),'/','json')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set directory",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "target_directory",
							"value": {
								"value": "@concat(formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set pipeline2Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PipelineId",
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Set pipeline2Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_run_ids",
							"value": {
								"value": "@pipeline()?.TriggeredByPipelineRunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Append variable2",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Append variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_run_ids",
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Append variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "finalappendedvariable",
							"value": {
								"value": "@variables('list_run_ids')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"product": {
						"type": "String"
					}
				},
				"variables": {
					"filename": {
						"type": "String"
					},
					"target_directory": {
						"type": "String"
					},
					"sys_date": {
						"type": "String"
					},
					"Year": {
						"type": "String"
					},
					"dir_final": {
						"type": "String"
					},
					"PipelineId": {
						"type": "String"
					},
					"list_run_ids": {
						"type": "Array"
					},
					"finalappendedvariable": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-22T01:22:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Output_Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitForFile",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('GetFileMetadata').output.lastModified, pipeline().parameters.expectedArrivalTime)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetFileMetadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "SourceDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									},
									"outputs": [
										{
											"name": "output",
											"type": "ActivityOutputType"
										}
									]
								},
								{
									"name": "WaitFiveMinutes",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 300
									}
								}
							],
							"timeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"expectedArrivalTime": {
						"type": "String",
						"defaultValue": "2024-07-24T08:00:00Z"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-18T17:03:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,pipeline().parameters.product)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@last(split(item().name,'.'))",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Case_csv",
												"activities": [
													{
														"name": "Copy data1_caseCSV",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "BinarySource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"deleteFilesAfterCompletion": false
																},
																"formatSettings": {
																	"type": "BinaryReadSettings"
																}
															},
															"sink": {
																"type": "BinarySink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "Binary1",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Output_Binary2",
																"type": "DatasetReference",
																"parameters": {
																	"target_dir": "csv"
																}
															}
														]
													}
												]
											},
											{
												"value": "Case2",
												"activities": [
													{
														"name": "Copy data1_JSON",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "BinarySource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"wildcardFileName": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"deleteFilesAfterCompletion": false
																},
																"formatSettings": {
																	"type": "BinaryReadSettings"
																}
															},
															"sink": {
																"type": "BinarySink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "Binary1",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Output_Binary2",
																"type": "DatasetReference",
																"parameters": {
																	"target_dir": "json"
																}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"product": {
						"type": "String"
					}
				},
				"variables": {
					"filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-18T17:50:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Output_Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_storage_job_copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Trigger",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Output_Binary2",
								"type": "DatasetReference",
								"parameters": {
									"target_dir": "trigger_output"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-23T03:04:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Output_Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_trigger_job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Trigger",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "stirage_trigger",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Output_Binary2",
								"type": "DatasetReference",
								"parameters": {
									"target_dir": "trigger_output"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "vikram.csv"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-24T02:00:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Output_Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzSql_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzSql_GenericLinkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"Database": {
							"value": "@dataset().DatabaseName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"DatabaseName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzSql_GenericLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "invoke_Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "developer",
								"value": "Vikram"
							},
							{
								"name": "Purpose",
								"value": "Invoke Pipeline2"
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"product": {
									"value": "@pipeline().parameters.Product",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Product": {
						"type": "string"
					}
				},
				"variables": {
					"run_ids": {
						"type": "Array"
					},
					"random": {
						"type": "String"
					},
					"finalappendedvariable": {
						"type": "Array"
					}
				},
				"annotations": [
					"Vikram_DE"
				],
				"lastPublishTime": "2025-05-22T01:26:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzSql_dataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.pl_table",
										"type": "Expression"
									},
									"SchemaName": {
										"value": "@pipeline().parameters.pl_schema",
										"type": "Expression"
									},
									"DatabaseName": {
										"value": "@pipeline().parameters.pl_source_database",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzSql_dataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.pl_table",
										"type": "Expression"
									},
									"SchemaName": {
										"value": "@pipeline().parameters.pl_schema",
										"type": "Expression"
									},
									"DatabaseName": {
										"value": "@pipeline().parameters.pl_target_database",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pl_target_database": {
						"type": "string"
					},
					"pl_schema": {
						"type": "string"
					},
					"pl_table": {
						"type": "string"
					},
					"pl_source_database": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-05-17T02:11:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzSql_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": {
									"type": "Expression",
									"value": "@pipeline().Pipeline"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 3000,
								"preCopyScript": "delete from target_able",
								"maxConcurrentConnections": 10,
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										""
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzSql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzSql_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzSql_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_storage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_trigger_job",
							"type": "PipelineReference"
						},
						"parameters": {
							"filename": "[parameters('trigger_storage_properties_pl_trigger_job_parameters_filename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/source/blobs/stirage_trigger/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_storage_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_trigger_job')]"
			]
		}
	]
}